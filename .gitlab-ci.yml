image: php:8.1-cli

stages:
  - setup
  - test
  - deploy

cache:
  paths:
    - vendor/
    - node_modules/

setup:
  stage: setup
  script:
    - apt-get update -yqq
    - apt-get install -yqq git unzip libpq-dev postgresql-client zlib1g-dev libzip-dev
    - docker-php-ext-install pdo pdo_pgsql zip
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --prefer-dist --no-ansi --no-interaction --no-scripts

test:
  stage: test
  script:
    - php bin/phpunit

  only:
    - beta

deploy:
  stage: deploy
  script:
    - apt-get update -yqq
    - apt-get install -yqq openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p $SSH_PORT -H $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST pwd
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd public_html/quotes && composer2 install --prefer-dist --no-ansi --no-interaction --no-scripts"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd public_html/quotes && php bin/console doctrine:migrations:migrate --no-interaction"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd public_html/quotes && php bin/console cache:clear"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd public_html/quotes && npm install"
    - ssh -p $SSH_PORT -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "cd public_html/quotes && npm run build"
  only:
    - main